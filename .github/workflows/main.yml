# This is a basic workflow to help you get started with Actions

name: rubyred.github.io gh deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # sets up .NET Core SDK 3.1
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1     
      # publishes Blazor project to the release-folder
      - name: Publish .NET Core Project
        run: dotnet publish rubyred.csproj -c Release -o release --nologo
        # changes the base-tag in index.html from '/' to 'rubyred.github.io' to match GitHub Pages repository subdirectory
      - name: Change base-tag in index.html from / to rubyred
        run: sed -i 's/<base href="\/" \/>/<base href="\/rubyred.github.io\/" \/>/g' release/wwwroot/index.html
        # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
      
      - name: Commit wwwroot to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            BRANCH: gh-pages
            FOLDER: release/wwwroot
